generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// This is for role only
enum Role {
  USER // Can read and comment, but cannot upload anything.
  CONTRIBUTOR // Special user who can upload chapters and manga but needs approval.
  TRANSLATOR // Can directly upload chapters, but needs approval to create new manga.
  ADMIN // Can upload, approve, delete, or modify anything. Very sensitive role.
  OWNER // Only one owner. Can do everything an admin can, plus delete admin accounts.
  MODERATOR // Can upload and approve posts, no need for approval, but cannot modify roles or sensitive data.
}

model user {
  id               String                            @id @default(uuid())
  username         String
  email            String                            @unique
  password         String
  role             Role                              @default(USER)
  website_name     String? // For translators only
  translator_group String? // For translators only
  personal_discord String? // For translators and admins
  phone_number     String? // Only for admins
  created_at       DateTime                          @default(now())
  updated_at       DateTime                          @updatedAt
  connection       manga_and_translator_connection[]

  @@index([email])
}

model manga_data {
  id                 String                            @id @default(uuid())
  cover_image        String
  title              String
  alternative_titles String[]
  rating             Float                             @default(0.0)
  release_date       DateTime?
  description        String
  type               String
  status             String
  artists            String[]
  authors            String[]
  genres             String[]
  theme              String[]
  format             String[]
  publishers         String[]
  total_chapters     Int                               @default(0)
  connection         manga_and_translator_connection[]
  created_at         DateTime                          @default(now())
  updated_at         DateTime                          @updatedAt

  @@index([title])
  @@index([alternative_titles])
  @@index([rating])
}

model manga_and_translator_connection {
  id         String     @id @default(uuid())
  manga_id   String
  user_id    String
  role       Role       @default(CONTRIBUTOR)
  user       user       @relation(fields: [user_id], references: [id])
  manga_data manga_data @relation(fields: [manga_id], references: [id])
  created_at DateTime   @default(now())

  @@unique([manga_id, user_id])
  @@index([manga_id, user_id])
}
